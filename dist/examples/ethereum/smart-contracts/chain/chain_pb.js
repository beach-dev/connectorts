"use strict";
// @generated by protoc-gen-es v1.0.0 with parameter "target=ts"
// @generated from file chain.proto (package chain, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.Block = exports.Transaction = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * to convert addresses from bytes to hex address, https://github.com/ethereum/go-ethereum/blob/4b2ff1457ac28fb2894485194e0e344e84c2bcd7/common/types.go#L210
 *
 * @generated from message chain.Transaction
 */
class Transaction extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bytes From = 2;
         */
        this.From = new Uint8Array(0);
        /**
         * @generated from field: string Hash = 3;
         */
        this.Hash = "";
        /**
         * @generated from field: double Size = 4;
         */
        this.Size = 0;
        /**
         * @generated from field: uint64 AccountNonce = 5;
         */
        this.AccountNonce = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: uint64 Price = 6;
         */
        this.Price = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: uint64 GasLimit = 7;
         */
        this.GasLimit = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: bytes Recipient = 8;
         */
        this.Recipient = new Uint8Array(0);
        /**
         * @generated from field: bytes Amount = 9;
         */
        this.Amount = new Uint8Array(0);
        /**
         * @generated from field: bytes Payload = 10;
         */
        this.Payload = new Uint8Array(0);
        /**
         * @generated from field: uint64 V = 11;
         */
        this.V = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: bytes R = 12;
         */
        this.R = new Uint8Array(0);
        /**
         * @generated from field: bytes S = 13;
         */
        this.S = new Uint8Array(0);
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Transaction().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Transaction().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Transaction().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Transaction, a, b);
    }
}
exports.Transaction = Transaction;
Transaction.runtime = protobuf_1.proto3;
Transaction.typeName = "chain.Transaction";
Transaction.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "ts", kind: "message", T: protobuf_1.Timestamp },
    { no: 2, name: "From", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "Hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "Size", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "AccountNonce", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "Price", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "GasLimit", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "Recipient", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 9, name: "Amount", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 10, name: "Payload", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 11, name: "V", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "R", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 13, name: "S", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
]);
/**
 * @generated from message chain.Block
 */
class Block extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string Hash = 2;
         */
        this.Hash = "";
        /**
         * @generated from field: uint64 Difficulty = 3;
         */
        this.Difficulty = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: uint64 Number = 4;
         */
        this.Number = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: uint64 GasLimit = 5;
         */
        this.GasLimit = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: uint64 GasUsed = 6;
         */
        this.GasUsed = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: uint64 Nonce = 7;
         */
        this.Nonce = protobuf_1.protoInt64.zero;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new Block().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new Block().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new Block().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(Block, a, b);
    }
}
exports.Block = Block;
Block.runtime = protobuf_1.proto3;
Block.typeName = "chain.Block";
Block.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "ts", kind: "message", T: protobuf_1.Timestamp },
    { no: 2, name: "Hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "Difficulty", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "Number", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "GasLimit", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "GasUsed", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "Nonce", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
]);
